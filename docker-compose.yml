version: "3.4"
services:
  mysqlHost:
    image: mysql:8
    container_name: mysqlHost
    stdin_open: true
    restart: unless-stopped
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - test-mysqldata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_USER: $MYSQL_USERNAME
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE

  mssqlHost:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssqlHost
    stdin_open: true
    restart: unless-stopped
    ports:
      - 1433:1433
    environment:
      MSSQL_HOST: $MSSQL_HOST
      MSSQL_USERNAME: $MSSQL_USERNAME
      MSSQL_PASSWORD: $MSSQL_PASSWORD
      MSSQL_DATABASE: $MSSQL_DATABASE

  pgHost:
    image: postgres:14.1-alpine
    container_name: pgHost
    stdin_open: true
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - test-pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB

  mongoHost:
    image: mongo:4
    container_name: mongoHost
    stdin_open: true
    ports:
      - 27017:27017
    volumes:
      - test-mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: $MONGO_DATABASE

  redisHost:
    image: redis:6
    container_name: redisHost
    restart: unless-stopped
    stdin_open: true
    ports:
      - 6379:6379
    # command: ['--requirepass "password"']
    command: redis-server --requirepass password
    volumes:
      - test-redisdata:/var/lib/redis

volumes:
  test-redisdata:
  test-mysqldata:
  test-mongodata:
  test-pgdata:

networks:
  default:
    external:
      name: test-network
